{"version":3,"sources":["components/about.js","components/product.js","components/Home.js","components/login.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Index","props","_useBindHook","initialValue","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onChange","val","useBindHook","click","console","log","react_default","a","createElement","onClick","style","width","window","innerWidth","height","innerHeight","background","Menu_display1","match","react_router_dom","margin","to","concat","path","react_router","component","params","id","linkStyle","display","textAlign","Main","tabs","title","sub","sessionStorage","clear","es","initialPage","tabBarPosition","renderTab","tab","Fragment","exact","render","About","Product","index","setItem","JSON","stringify","lastUrlLocation","parse","getItem","removeItem","pathname","history","push","checkUserFn","location","Home","Login","alert","App","components_Main","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qKAuBeA,EAdD,SAACC,GAAU,IAAAC,EAPL,SAACC,GAAiB,IAAAC,EACRC,mBAASF,GAAgB,IADjBG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC3BK,EAD2BH,EAAA,GACpBI,EADoBJ,EAAA,GAKlC,MAAO,CAACG,QAAOE,SAHE,SAAAC,GACbF,EAASE,KAKaC,CAAY,IAA/BJ,EADcP,EACdO,MAAOE,EADOT,EACPS,SACRG,EAAQ,WACVH,GAAUF,IAGd,OADAM,QAAQC,IAAIP,GACLQ,EAAAC,EAAAC,cAAA,oBAAYV,EAAQQ,EAAAC,EAAAC,cAAA,OAAKC,QAASN,GAAd,QAAkCG,EAAAC,EAAAC,cAAA,OAAKC,QAASN,GAAd,UACzDG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACC,MAAOC,OAAOC,WAAYC,OAA6B,GAArBF,OAAOG,YAAmBC,WAAY,SAChFlB,EACDQ,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACC,MAAO,OAAQG,OAAQ,OAAQE,WAAY,YAAxD,eACAV,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACC,MAAO,OAAQG,OAAQ,OAAQE,WAAY,YAAxD,eAHJ,YCEOC,EAfO,SAAC3B,GAAU,IACtB4B,EAAS5B,EAAT4B,MACP,OAAOZ,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMT,MAAO,CAACU,OAAO,UAAWC,GAAE,GAAAC,OAAKJ,EAAMK,KAAX,OAAlC,iBACAjB,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAACU,OAAO,WAArB,KACAd,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMT,MAAO,CAACU,OAAO,UAAWC,GAAE,GAAAC,OAAKJ,EAAMK,KAAX,OAAlC,iBACAjB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACIlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOD,KAAI,GAAAD,OAAKJ,EAAMK,KAAX,QAAuBE,UAAW,SAACnC,GAAU,IACrCoC,EAAWpC,EAAnB4B,MAAQQ,OACf,OAAOpB,EAAAC,EAAAC,cAAA,2BAASkB,EAAOC,GAAhB,yBCRjBC,EAAY,CAACC,QAAS,eAAgBlB,MAAO,OAAQmB,UAAW,UAuBvDC,EAtBF,SAACzC,GAAU,IACb4B,EAAS5B,EAAT4B,MACDc,EAAO,CAAC,CAACC,MAAO3B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMT,MAAOkB,EAAWP,GAAE,SAA1B,gBAAgDa,IAAK,KAAM,CAC7ED,MAAO3B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMT,MAAOkB,EAAWP,GAAE,GAAAC,OAAKJ,EAAMK,KAAX,WAA1B,gBACPW,IAAK,KACN,CAACD,MAAO3B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMT,MAAOkB,EAAWP,GAAE,GAAAC,OAAKJ,EAAMK,KAAX,aAA1B,gBAAgEW,IAAK,KAAM,CAClFD,MAAO3B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMT,MAAOkB,EAAWP,GAAE,SAAYZ,QAAS,kBAAM0B,eAAeC,UAApE,gBAAwFF,IAAK,MAExG,OAAQ5B,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAML,KAAMA,EAAMM,YAAa,EAAGC,eAAe,SAASC,UAAW,SAAAC,GAAG,OAAInC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KAAGD,EAAIR,UACnF3B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,OAEJ/B,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACIlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOmB,OAAK,EAACpB,KAAI,GAAAD,OAAKJ,EAAMK,KAAX,KAAoBqB,OAAQ,WACzC,OAAOtC,EAAAC,EAAAC,cAAA,4BAEXF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOD,KAAI,GAAAD,OAAKJ,EAAMK,KAAX,UAAyBE,UAAWoB,IAC/CvC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOD,KAAI,GAAAD,OAAKJ,EAAMK,KAAX,YAA2BE,UAAWqB,OCL9CC,EAlBD,SAACzD,GACX,OAAOgB,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQ5B,QAAS,WACb0B,eAAea,QAAQ,WAAYC,KAAKC,UAAU,CAACvB,GAAI,OACvD,IAAMwB,EAAkBF,KAAKG,MAAMjB,eAAekB,QAAQ,oBAC1DjD,QAAQC,IAAI8C,GACZhB,eAAemB,WAAW,mBACO,MAA7BH,EAAgBI,SAChBjE,EAAMkE,QAAQC,KAAK,QACiB,WAA7BN,EAAgBI,SACvBjE,EAAMkE,QAAQC,KAAK,QACZN,GACP7D,EAAMkE,QAAQC,KAAKN,KAV3B,kBCiCOpB,EA/BF,SAACzC,GACV,IAAMoE,EAAc,WAEhB,OAAiB,OADHT,KAAKG,MAAMjB,eAAekB,QAAQ,cAAgB,IACtD1B,IAKd,OAAQrB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,aAAOpC,EAAAC,EAAAC,cAACW,EAAA,EAAD,KAEfb,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOoB,OAAQ,SAACtD,GAEZ,GADAc,QAAQC,IAAI,kCACe,UAAvBf,EAAMqE,SAASpC,KAGnB,OAAKmC,SAAL,GACSvB,eAAekB,QAAQ,oBACxBlB,eAAea,QAAQ,kBAAmBC,KAAKC,UAAU5D,EAAMqE,WAE5DrD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAUH,GAAI,eAXd,IAaVf,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACDlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOD,KAAK,QAAQE,UAAWmC,IAC/BtD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOmB,OAAK,EAACpB,KAAK,SAASE,UAAWoC,IACtCvD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOoB,OAAQ,WACX,GAAIc,IAEA,OADAI,MAAM,0DACCxD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAUH,GAAI,aAN5B,KAbU,KAAP,QCVG0C,EADH,kBAAOzD,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACwD,EAAD,QCSJC,QACW,cAA7BrD,OAAO+C,SAASO,UAEe,UAA7BtD,OAAO+C,SAASO,UAEhBtD,OAAO+C,SAASO,SAAShD,MACvB,kECXNiD,IAASvB,OACPtC,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAC4D,EAAD,OAEDC,SAASC,eAAe,SDsHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8c7acaf6.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst useBindHook = (initialValue) => {\n    const [value, setValue] = useState(initialValue || \"\");\n    const onChange = val => {\n        setValue(val)\n    };\n    return {value, onChange};\n}\nconst Index = (props) => {\n    const {value, onChange} = useBindHook(\"\");\n    const click = () => {\n        onChange(!value)\n    }\n    console.log(value)\n    return <div>      {value ? <div onClick={click}>show</div> : <div onClick={click}>unShow</div>}\n        <hr/>\n        <div style={{width: window.innerWidth, height: window.innerHeight * 0.5, background: \"#ddd\"}}>\n            {value ?\n            <div style={{width: \"100%\", height: \"100%\", background: \"#561199\"}}>1--more ...</div> :\n            <div style={{width: \"100%\", height: \"100%\", background: \"#667711\"}}>2--more ...</div>}      </div>\n    </div>\n}\nexport default Index;","import React from 'react'\nimport {Switch, Route, Link} from 'react-router-dom'\n\n\nconst Menu_display1 = (props) => {\n    const {match} = props;\n    return <div>\n        <Link style={{margin:\"0 12px\"}} to={`${match.path}/1`}>产品1</Link>\n        <span style={{margin:\"0 12px\"}}>|</span>\n        <Link style={{margin:\"0 12px\"}} to={`${match.path}/2`}>产品2</Link>\n        <hr/>\n        <Switch>\n            <Route path={`${match.path}/:id`} component={(props) => {\n                const {match: {params}} = props;\n                return <div>产品 {params.id} page!!</div>\n            }}/>\n        </Switch>\n    </div>\n}\nexport default Menu_display1","import React from 'react'\nimport {Switch, Route, Link, Redirect} from 'react-router-dom'\nimport About from \"./about\";\nimport Product from \"./product\";\nimport {Tabs, WhiteSpace} from 'antd-mobile';\n\nconst linkStyle = {display: 'inline-block', width: '100%', textAlign: 'center'}\nconst Main = (props) => {\n    const {match} = props;\n    const tabs = [{title: <Link style={linkStyle} to={`/Home`}>主页</Link>, sub: '1'}, {\n        title: <Link style={linkStyle} to={`${match.path}/about`}>关于</Link>,\n        sub: '2'\n    }, {title: <Link style={linkStyle} to={`${match.path}/product`}>产品</Link>, sub: '3'}, {\n        title: <Link style={linkStyle} to={`/Login`} onClick={() => sessionStorage.clear()}>登出</Link>, sub: '3'\n    },];\n    return (<div>\n        <div>\n            <Tabs tabs={tabs} initialPage={0} tabBarPosition=\"bottom\" renderTab={tab => <>{tab.title}</>}/>\n            <WhiteSpace/>\n        </div>\n        <Switch>\n            <Route exact path={`${match.path}/`} render={() => {\n                return <div>welcome !!</div>\n            }}/>\n            <Route path={`${match.path}/about`} component={About}/>\n            <Route path={`${match.path}/product`} component={Product}/>\n        </Switch>\n    </div>)\n}\nexport default Main","import React from 'react'\nimport {Button} from 'antd-mobile';\nconst index = (props) => {\n    return <div>\n        <Button onClick={() => {\n            sessionStorage.setItem(\"userInfo\", JSON.stringify({id: 101}));\n            const lastUrlLocation = JSON.parse(sessionStorage.getItem(\"lastUrlLocation\"));\n            console.log(lastUrlLocation)\n            sessionStorage.removeItem(\"lastUrlLocation\")\n            if (lastUrlLocation.pathname === \"/\") {\n                props.history.push(\"Home\")\n            } else if (lastUrlLocation.pathname === \"/Login\") {\n                props.history.push(\"Home\")\n            } else if (lastUrlLocation) {\n                props.history.push(lastUrlLocation)\n            }\n        }}>登录\n        </Button>\n    </div>\n}\nexport default index","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport Home from './Home'\nimport Login from './login'\nimport {BrowserRouter, Redirect} from 'react-router-dom'\n\nconst Main = (props) => {\n    const checkUserFn = () => {\n        const login = JSON.parse(sessionStorage.getItem(\"userInfo\")) || {};\n        if (login.id === 101) {\n            return true\n        }\n        return false\n    }\n    return (<>     <BrowserRouter>\n        {/* Router 过滤器*/}\n    <Route render={(props) => {\n        console.log(\"过滤。。。\")         /*Login 忽略*/\n        if (props.location.path == \"/Login\") {\n            return;\n        }         /*没有权限的跳到登录页*/\n        if (!checkUserFn()) {             /* 记录进来的页面 */\n            if (!sessionStorage.getItem(\"lastUrlLocation\")) {\n                sessionStorage.setItem(\"lastUrlLocation\", JSON.stringify(props.location));\n            }\n            return <Redirect to={\"/Login\"}/>\n        }\n    }}/> <Switch>\n        <Route path='/Home' component={Home}/>\n        <Route exact path='/login' component={Login}/>\n        <Route render={() => {\n            if (checkUserFn()) {\n                alert(\"地址有误，返回首页\")\n                return <Redirect to={\"/Home\"}/>\n            }\n        }}/> </Switch> </BrowserRouter>   </>)\n}\nexport default Main","import React from 'react'\nimport Main from './components/Main'\n\nconst App = () => (<div><Main/></div>)\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd-mobile/dist/antd-mobile.css';  // or 'antd-mobile/dist/antd-mobile.less'\nimport { BrowserRouter } from 'react-router-dom'\nReactDOM.render((\n  <BrowserRouter>\n    <App></App>\n  </BrowserRouter>\n), document.getElementById('root'))\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}